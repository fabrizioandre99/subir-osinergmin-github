apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME
  labels:
    app: $APP_NAME
spec:
  replicas: $K8S_PODS
  selector:
    matchLabels:
      app: $APP_NAME
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $APP_NAME
        version: $APP_VERSION
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: environment
                    operator: In
                    values:
                      - "$K8S_ENVIRONMENT"
      tolerations:
        - effect: NoSchedule
          key: environment
          operator: Equal
          value: $K8S_ENVIRONMENT
      imagePullSecrets:
        - name: registry-auth
      hostname: $APP_NAME
      containers:
        - name: $APP_NAME
          image: $IMAGE_NAME
          ports:
            - containerPort: $SERVER_PORT
#          livenessProbe:
#            httpGet:
#              path: /actuator/health
#              port: $MANAGEMENT_PORT
#            failureThreshold: 30
#            periodSeconds: 10
#            timeoutSeconds: 15
#          readinessProbe:
#            httpGet:
#              path: /actuator/health/readiness
#              port: $MANAGEMENT_PORT
#            failureThreshold: 30
#            periodSeconds: 10
#            timeoutSeconds: 15
#          startupProbe:
#            httpGet:
#              path: /actuator/health
#              port: $MANAGEMENT_PORT
#            failureThreshold: 30
#            periodSeconds: 10
#            timeoutSeconds: 15 # La conexion con el correo y la DB puede demorar aprox 12s (+ un poco de espacio)
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          envFrom:
          - configMapRef:
              name: $APP_NAME-cm
          - secretRef:
              name: $APP_NAME-secret
